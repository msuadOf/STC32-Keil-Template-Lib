C251 COMPILER V5.60.0,  STC32G_CAN_Isr                                                     14/05/23  10:09:44  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STC32G_CAN_Isr
OBJECT MODULE PLACED IN .\MDK\Obj\STC32G_CAN_Isr.obj
COMPILER INVOKED BY: D:\Program\Keil_v5\C251\BIN\C251.EXE Driver\Isr\STC32G_CAN_Isr.c XSMALL INTR2 OPTIMIZE(0,SPEED) BRO
                    -WSE INCDIR(.\Driver;.\Driver\Inc;.\Driver\Isr;.\CORE\Inc;.\bsp\include) DEBUG PRINT(.\MDK\List\STC32G_CAN_Isr.lst) TABS(
                    -2) OBJECT(.\MDK\Obj\STC32G_CAN_Isr.obj) 

stmt  level    source

    1          #include  "STC32G_CAN.h"
    2          
    3          bit B_Can1Read;     //CAN1 收到数据标志
    4          bit B_Can2Read;     //CAN2 收到数据标志
    5          
    6          //========================================================================
    7          // 函数: CAN1_ISR_Handler
    8          // 描述: CAN1中断函数.
    9          // 参数: none.
   10          // 返回: none.
   11          // 版本: V1.0, 2022-03-27
   12          //========================================================================
   13          void CAN1_ISR_Handler (void) interrupt CAN1_VECTOR
   14          {
   15   1        u8 isr;
   16   1        u8 store;
   17   1        u8 arTemp;
   18   1      
   19   1        arTemp = CANAR;     //先CANAR现场保存，避免主循环里写完 CANAR 后产生中断，在中断里修改了 CANAR 内容
   20   1        store = AUXR2;      //后AUXR2现场保存
   21   1        
   22   1        AUXR2 &= ~0x08;   //选择CAN1模块
   23   1        isr = CanReadReg(ISR);
   24   1      
   25   1        if((isr & 0x04) == 0x04)  //TI
   26   1        {
   27   2          CANAR = ISR;
   28   2          CANDR = 0x04;    //CLR FLAG
   29   2        } 
   30   1        if((isr & 0x08) == 0x08)  //RI
   31   1        {
   32   2          CANAR = ISR;
   33   2          CANDR = 0x08;    //CLR FLAG
   34   2        
   35   2          B_Can1Read = 1;
   36   2        }
   37   1      
   38   1        if((isr & 0x40) == 0x40)  //ALI
   39   1        {
   40   2          CANAR = ISR;
   41   2          CANDR = 0x40;    //CLR FLAG
   42   2        } 
   43   1      
   44   1        if((isr & 0x20) == 0x20)  //EWI
   45   1        {
   46   2          CANAR = MR;
   47   2          CANDR &= ~0x04;  //清除 Reset Mode, 从BUS-OFF状态退出
   48   2          
   49   2          CANAR = ISR;
   50   2          CANDR = 0x20;    //CLR FLAG
   51   2        } 
   52   1      
   53   1        if((isr & 0x10) == 0x10)  //EPI
   54   1        {
   55   2          CANAR = ISR;
   56   2          CANDR = 0x10;    //CLR FLAG
   57   2        } 
C251 COMPILER V5.60.0,  STC32G_CAN_Isr                                                     14/05/23  10:09:44  PAGE 2   

   58   1      
   59   1        if((isr & 0x02) == 0x02)  //BEI
   60   1        {
   61   2          CANAR = ISR;
   62   2          CANDR = 0x02;    //CLR FLAG
   63   2        } 
   64   1      
   65   1        if((isr & 0x01) == 0x01)  //DOI
   66   1        {
   67   2          CANAR = ISR;
   68   2          CANDR = 0x01;    //CLR FLAG
   69   2        } 
   70   1      
   71   1        AUXR2 = store;     //先AUXR2现场恢复
   72   1        CANAR = arTemp;    //后CANAR现场恢复
   73   1      }
   74          
   75          //========================================================================
   76          // 函数: CAN2_ISR_Handler
   77          // 描述: CAN2中断函数.
   78          // 参数: none.
   79          // 返回: none.
   80          // 版本: V1.0, 2022-03-27
   81          //========================================================================
   82          void CAN2_ISR_Handler (void) interrupt CAN2_VECTOR
   83          {
   84   1        u8 isr;
   85   1        u8 store;
   86   1        u8 arTemp;
   87   1      
   88   1        arTemp = CANAR;     //先CANAR现场保存，避免主循环里写完 CANAR 后产生中断，在中断里修改了 CANAR 内容
   89   1        store = AUXR2;      //后AUXR2现场保存
   90   1        
   91   1        AUXR2 |= 0x08;    //选择CAN2模块
   92   1        isr = CanReadReg(ISR);
   93   1      
   94   1        if((isr & 0x04) == 0x04)  //TI
   95   1        {
   96   2          CANAR = ISR;
   97   2          CANDR = 0x04;    //CLR FLAG
   98   2        } 
   99   1        if((isr & 0x08) == 0x08)  //RI
  100   1        {
  101   2          CANAR = ISR;
  102   2          CANDR = 0x08;    //CLR FLAG
  103   2        
  104   2          B_Can2Read = 1;
  105   2        }
  106   1      
  107   1        if((isr & 0x40) == 0x40)  //ALI
  108   1        {
  109   2          CANAR = ISR;
  110   2          CANDR = 0x40;    //CLR FLAG
  111   2        } 
  112   1      
  113   1        if((isr & 0x20) == 0x20)  //EWI
  114   1        {
  115   2          CANAR = MR;
  116   2          CANDR &= ~0x04;  //清除 Reset Mode, 从BUS-OFF状态退出
  117   2          
  118   2          CANAR = ISR;
  119   2          CANDR = 0x20;    //CLR FLAG
  120   2        } 
  121   1      
  122   1        if((isr & 0x10) == 0x10)  //EPI
  123   1        {
C251 COMPILER V5.60.0,  STC32G_CAN_Isr                                                     14/05/23  10:09:44  PAGE 3   

  124   2          CANAR = ISR;
  125   2          CANDR = 0x10;    //CLR FLAG
  126   2        } 
  127   1      
  128   1        if((isr & 0x02) == 0x02)  //BEI
  129   1        {
  130   2          CANAR = ISR;
  131   2          CANDR = 0x02;    //CLR FLAG
  132   2        } 
  133   1      
  134   1        if((isr & 0x01) == 0x01)  //DOI
  135   1        {
  136   2          CANAR = ISR;
  137   2          CANDR = 0x01;    //CLR FLAG
  138   2        } 
  139   1      
  140   1        AUXR2 = store;     //先AUXR2现场恢复
  141   1        CANAR = arTemp;    //后CANAR现场恢复
  142   1      }
  143          
  144          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       816     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         6     ------
  bit size             =         2     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
