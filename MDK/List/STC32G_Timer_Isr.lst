C251 COMPILER V5.60.0,  STC32G_Timer_Isr                                                   14/05/23  10:09:45  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STC32G_Timer_Isr
OBJECT MODULE PLACED IN .\MDK\Obj\STC32G_Timer_Isr.obj
COMPILER INVOKED BY: D:\Program\Keil_v5\C251\BIN\C251.EXE Driver\Isr\STC32G_Timer_Isr.c XSMALL INTR2 OPTIMIZE(0,SPEED) B
                    -ROWSE INCDIR(.\Driver;.\Driver\Inc;.\Driver\Isr;.\CORE\Inc;.\bsp\include) DEBUG PRINT(.\MDK\List\STC32G_Timer_Isr.lst) T
                    -ABS(2) OBJECT(.\MDK\Obj\STC32G_Timer_Isr.obj) 

stmt  level    source

    1          #include  "STC32G_Timer.h"
    2          
    3          
    4          //void TIM_Callback(TIM_HandleTypeDef* htim);
    5          void TIM4_Callback();
    6          
    7          //========================================================================
    8          // 函数: Timer0_ISR_Handler
    9          // 描述: Timer0中断函数.
   10          // 参数: none.
   11          // 返回: none.
   12          // 版本: V1.0, 2020-09-23
   13          //========================================================================
   14          void Timer0_ISR_Handler (void) interrupt TMR0_VECTOR    //进中断时已经清除标志
   15          {
   16   1        //Task_Marks_Handler_Callback();  //任务标记回调函数
   17   1        
   18   1         #ifdef TIM0
                 TIM_Callback(&htim0);
                #endif
   21   1      }
   22          
   23          //========================================================================
   24          // 函数: Timer1_ISR_Handler
   25          // 描述: Timer1中断函数.
   26          // 参数: none.
   27          // 返回: none.
   28          // 版本: V1.0, 2020-09-23
   29          //========================================================================
   30          void Timer1_ISR_Handler (void) interrupt TMR1_VECTOR    //进中断时已经清除标志
   31          {
   32   1        // TODO: 在此处添加用户代码
   33   1        //P66 = ~P66;
   34   1           #ifdef TIM1
                 TIM_Callback(&htim1);
                #endif
   37   1      }
   38          
   39          //========================================================================
   40          // 函数: Timer2_ISR_Handler
   41          // 描述: Timer2中断函数.
   42          // 参数: none.
   43          // 返回: none.
   44          // 版本: V1.0, 2020-09-23
   45          //========================================================================
   46          void Timer2_ISR_Handler (void) interrupt TMR2_VECTOR    //进中断时已经清除标志
   47          {
   48   1        // TODO: 在此处添加用户代码
   49   1        //P65 = ~P65;
   50   1           #ifdef TIM2
                 TIM_Callback(&htim2);
                #endif
   53   1      }
   54          
   55          //========================================================================
   56          // 函数: Timer3_ISR_Handler
   57          // 描述: Timer3中断函数.
C251 COMPILER V5.60.0,  STC32G_Timer_Isr                                                   14/05/23  10:09:45  PAGE 2   

   58          // 参数: none.
   59          // 返回: none.
   60          // 版本: V1.0, 2020-09-23
   61          //========================================================================
   62          void Timer3_ISR_Handler (void) interrupt TMR3_VECTOR    //进中断时已经清除标志
   63          {
   64   1        // TODO: 在此处添加用户代码
   65   1        //P64 = ~P64;
   66   1           #ifdef TIM3
                 TIM_Callback(&htim3);
                #endif
   69   1      }
   70          
   71          //========================================================================
   72          // 函数: Timer4_ISR_Handler
   73          // 描述: Timer4中断函数.
   74          // 参数: none.
   75          // 返回: none.
   76          // 版本: V1.0, 2020-09-23
   77          //========================================================================
   78          void Timer4_ISR_Handler (void) interrupt TMR4_VECTOR    //进中断时已经清除标志
   79          {
   80   1        // TODO: 在此处添加用户代码
   81   1        //P63 = ~P63;
   82   1        TIM4_Callback();
   83   1           #ifdef TIM4
                 TIM_Callback(&htim4);
                #endif
   86   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =        67     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
